CYLINDER	structs.h	53
MINI_RT_H	minirt.h	2
Mmain	main.c	/^int			main(int argc, char *argv[])$/
PLANE	structs.h	54
SPHERE	structs.h	55
SQUARE	structs.h	56
STRUCTS_H	structs.h	2
TRIANGLE	structs.h	57
a	structs.h	22
ambl_color	structs.h	106
ambl_ratio	structs.h	105
b	structs.h	23
blue	structs.h	15
c	structs.h	24
cameras	structs.h	108
canvas_to_viewport	main.c	/^t_vec3		canvas_to_viewport(int x, int y)$/
center	structs.h	33
center	structs.h	67
center	structs.h	79
center	structs.h	86
color	structs.h	48
color	structs.h	69
color	structs.h	75
color	structs.h	82
color	structs.h	90
color	structs.h	97
data	structs.h	62
diameter	structs.h	68
diameter	structs.h	88
die	error.c	/^void die(const char* error_text)$/
dir	structs.h	29
direction	structs.h	40
dot_product	main.c	/^double dot_product(t_vec3 u, t_vec3 v)$/
e_objid	structs.h	52
env	main.c	3
fov	structs.h	41
free_camera_list	error.c	/^void free_camera_list(t_cam *camera)$/
free_env	error.c	/^void free_env(t_env *env)$/
free_light_list	error.c	/^void free_light_list(t_light *light)$/
free_object_list	error.c	/^void free_object_list(t_object *object)$/
get_color_as_int	main.c	/^int			get_color_as_int(t_color *color)$/
get_object_color	main.c	/^t_color *get_object_color(t_object *object)$/
green	structs.h	14
height	structs.h	34
height	structs.h	89
id	structs.h	61
init_env	main.c	/^void		init_env(t_env *env)$/
intersect_ray_with_object	main.c	/^bool		intersect_ray_with_object(t_vec3 *eye, t_vec/
intersect_ray_with_sphere	main.c	/^bool		intersect_ray_with_sphere(t_vec3 *eye,  t_ve/
is_in	parse_values.c	/^int		is_in(char c, const char *set)$/
k	structs.h	25
len	structs.h	114
lights	structs.h	107
make_vector_substracting_2_points	main.c	/^t_vec3		make_vector_substracting_2_points(t_vec3 p/
new_vec3	main.c	/^t_vec3 new_vec3(double x, double y, double z)$/
next	structs.h	42
next	structs.h	49
next	structs.h	63
objects	structs.h	109
orientation	structs.h	74
orientation	structs.h	80
orientation	structs.h	87
origin	structs.h	39
origin	structs.h	46
p1	structs.h	94
p2	structs.h	95
p3	structs.h	96
parse_ambl	parse.c	/^void	parse_ambl(char **input)$/
parse_cam	parse.c	/^void parse_cam(char **input)$/
parse_color	parse_values.c	/^t_color	parse_color(char **input)$/
parse_cy	parse_objects.c	/^void parse_cy(char **input)$/
parse_double	parse_values.c	/^double	parse_double(char **input)$/
parse_double_or_die	parse_values.c	/^double parse_double_or_die(char **input)$/
parse_file_into_env	parse.c	/^void parse_file_into_env()$/
parse_int	parse_values.c	/^int		parse_int(char**input)$/
parse_int_or_die	parse_values.c	/^int parse_int_or_die(char **input)$/
parse_light	parse.c	/^void parse_light(char **input)$/
parse_pl	parse_objects.c	/^void parse_pl(char **input)$/
parse_res	parse.c	/^void parse_res(char **input)$/
parse_sp	parse_objects.c	/^void parse_sp(char **input)$/
parse_sq	parse_objects.c	/^void parse_sq(char **input)$/
parse_tr	parse_objects.c	/^void parse_tr(char **input)$/
parse_vec	parse_values.c	/^t_vec3	parse_vec(char **input)$/
prints	main.c	/^void prints(struct s_object *object)$/
ratio	structs.h	47
red	structs.h	13
res_x	structs.h	103
res_y	structs.h	104
s_cam	structs.h	38
s_color	structs.h	12
s_cylinder	structs.h	85
s_env	structs.h	100
s_fat_token	structs.h	112
s_light	structs.h	45
s_object	structs.h	60
s_plane	structs.h	72
s_quaternion	structs.h	21
s_ray	structs.h	28
s_sphere	structs.h	66
s_square	structs.h	78
s_triangle	structs.h	93
s_vec3	structs.h	6
s_viewplane	structs.h	32
scene_path	structs.h	102
side_len	structs.h	81
skip_blank	parse_values.c	/^void	skip_blank(char **input)$/
skip_blank_and_one_comma	parse_values.c	/^void	skip_blank_and_one_comma(char **input)$/
skip_set	parse_values.c	/^void	skip_set(char **input, const char *set)$/
some_point	structs.h	73
t_cam	structs.h	43
t_color	structs.h	16
t_cylinder	structs.h	91
t_env	structs.h	110
t_light	structs.h	50
t_matrix3x3	structs.h	18
t_matrix4x4	structs.h	19
t_object	structs.h	64
t_plane	structs.h	76
t_quaternion	structs.h	26
t_ray	structs.h	30
t_sphere	structs.h	70
t_square	structs.h	83
t_triangle	structs.h	98
t_vec3	structs.h	10
t_viewplane	structs.h	36
token	structs.h	113
token_func	structs.h	/^	void		(*token_func)(char** input);$/
token_table	parse.c	7
trace_ray	main.c	/^t_object	*trace_ray(t_vec3 *eye, t_vec3 *ray)$/
width	structs.h	35
x	structs.h	7
y	structs.h	8
z	structs.h	9
